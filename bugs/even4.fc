mut:={[k,n,i] -> [] -> []: (0=0 && ((n=0 && (i=0 && k=11)))) ||  exists (i21,n21,k21: ( 
mut(k21,n21,i21)
) && (((k21=23 && n21+1=n) && i21+1=i) && k=11)) ||  exists (i21,n21,k21: (
mut(k21,n21,i21)
) && (((k21=11 && n21+1=n) && k=23) && i21=i))
};

bottomupgen([mut], [2], SimHeur);
# why 0<=k<=5 not captured?
# ((n >= 2*i && i >= 0) && n = k + 2*i)
K := {[k,n,i]: k=23 || k=11};

R := {[k,n,i]:
#(((n >= 2i && 2i + 1 >= n) && i >= 0) && 12n + 11 = k + 24i)
((n >= 2i && i >= 0) && 12n + 11 = k + 24i)
};
R subset K;

# Ideal:
# F6W:={[k,n,i]:n >= 2i && 2i + 1 >= n && i >= 0 && n = k + 2i};

# F0 := {[k,n,i]: 1=0};
# F1 := mut(F0); F1;
# F2 := mut(F1); F2;
# F3 := mut(F2); F3;
# F3E := PairwiseCheck F3; F3E;
# #(((n >= 2*i && i + 1 >= n) && i >= 0) && n = k + 2*i)
# F3Ha := selhull(F3,2,SimHeur);F3Ha;
# #(((n >= 2*i && 2 >= n && 2*i + 1 >= n) && i >= 0) && n = k + 2*i)
# F3H := selhull(F3E,2,SimHeur);F3H;
# #(((n >= 2*i && i + 1 >= n) && i >= 0) && n = k + 2*i)
# F3H subset F3Ha;
# F3Ha subset F3H;
# # pairwisecheck before selective hull results in simpler expressionq
# F4 := mut(F3H); F4;
# F4E := PairwiseCheck F4; F4;
# #(((n = 1 + 2*i && (i >= 0 && 1 >= i)) && 1 = k) || (0 = 0 && 2 = n && 1 = i && 0 = k) || (0 = 0 && 0 = n && 0 = i && 0 = k))
# F4H := selhull(F4E,2,SimHeur);F4H;
# K := {[k,n,i]: 0<=k<=1};
# #(((n >= 2*i && 2*i + 1 >= n) && (i >= 0 && 1 >= i)) && n = k + 2*i)
# F4H subset K;
# F3H subset K;
# F4W := widen(F3H,F4H,SimHeur);F4W;
# #((n >= 2*i && i >= 0) && n = k + 2*i)
# F4W subset K;
# # widen did not preserve 0<=k<=1

# F5 := mut(F4H); F5;
# F5E := PairwiseCheck F5; F5E;
# F5H := selhull(F5E,2,SimHeur);F5H;
# F5H subset K;
# #(((n >= 2*i && 2*i + 1 >= n && i + 2 >= n) && i >= 0) && n = k + 2*i)

# F6 := mut(F5H); F6;
# F6E := PairwiseCheck F6; F6E;
# F6H := selhull(F6E,2,SimHeur);F6H;
# #(((n >= 2*i && 2*i + 1 >= n) && (i >= 0 && 2 >= i)) && n = k + 2*i)
# F6H subset K;
# F6W:={[k,n,i]:n >= 2i && 2i + 1 >= n && i >= 0 && n = k + 2i};
# F6W subset K;
# # delayed widenig would be helpful..
