#all_lookup with both HIGH and LOW bound checks
#ERR outcome for m=3 is imprecise

d0:={[a,i,j]:(((j + (-i) + -13 >= 0 && -7i + 5 + (-j) >= 0) && a + -1 >= 0) && -1 + 2a + (-j) + (-i) >= 0)};
d1:={[a,i,j]:((j + (-i) >= 0 && a + -1 >= 0) && i + j + -2a >= 0)};
d2:={[a,i,j]:((i + 0 >= 0 && 2a + -2 + (-i) + (-j) >= 0) && 6 + i + 7j + -8a >= 0)};

e0:={[a,i,j]:((j + (-i) >= 0 && (-i) + -1 + (-j) >= 0) && a + -1 >= 0)};
e1:={[a,i,j]:((j + (-i) >= 0 && a + -1 >= 0) && i + j + -2a >= 0)};
e2:={[a,i,j]:(((j + (-i) + -28 >= 0 && j + i >= 0) && -15i + 13 + (-j) >= 0) && -1 + 2a + (-i) + (-j) >= 0)};
e3:={[a,i,j]:((2 + i + 3j + -4a >= 0 && -1 + 2a + (-i) + (-j) >= 0) && i + 0 >= 0)};
e4:={[a,i,j]:((4a + -5 + (-i) + -3j >= 0 && i + 0 >= 0) && 14 + i + 15j + -16a >= 0)};




CHK1:={[a,i,j]: i<=j && a<=j};
CHK2:={[a,i,j]: i<=j && i<=-1};

d0 subset CHK1;
d1 subset CHK1;
d2 subset CHK1;
d0 subset CHK2;
d1 subset CHK2;
d2 subset CHK2;
#(d0)=>CHK2,(d1,d2)=>CHK1

e0;e1;e2;e3;e4;
e0 subset CHK1;
e1 subset CHK1;
e2 subset CHK1;
e3 subset CHK1;
e4 subset CHK1;
e0 subset CHK2;
e1 subset CHK2;
e2 subset CHK2;
e3 subset CHK2;
e4 subset CHK2;
#(e0,e2)=>CHK2,(e1,e3,e4)=>CHK1

