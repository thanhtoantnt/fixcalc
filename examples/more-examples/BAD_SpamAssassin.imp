#include "Primitives.imp"

-- SpamAssasin: the BAD version is detected as MAY_BUG
void main() {
  int BASE_SZ := 2;
  int BUFSZ   := BASE_SZ+2;
  int INSZ    := BUFSZ+5;
  int [int][INSZ] msg := 0; 
  message_write(msg,INSZ)
}

void message_write(int[int] msg, int len){
  int BASE_SZ := 2;
  int BUFSZ   := BASE_SZ+2;
  int i := 0;
  int j := 0;
  int [int][BUFSZ] buffer := 0;
  -- Bad
  int limit := BUFSZ - 1;
  while (i<len) do {
    j:=0;
    while(and(i<len,j<limit)) do {
      if (and(i+1<len,randBool())) then {
        buffer[j] := msg[i];
        j:=j+1;
        i:=i+1;
        buffer[j] := msg[i];
        j:=j+1;
        i:=i+1;
        -- BAD ACCESS
        buffer[j] := 46; -- '.'
        j:=j+1
      } else {
        buffer[j] := msg[i];
        j:=j+1;
        i:=i+1
      }
    }
  }
}
{-
void message_write(int[int] msg, int len){
  int BASE_SZ := 2;
  int BUFSZ   := BASE_SZ+2;
  int i := 0;
  int j := 0;
  int [int][BUFSZ] buffer := 0;
  int limit := BUFSZ - 1;
  for (i:=0;i<len;void) {
    for (j:=0;and(i<len,j<limit);void) {
      if (and(and(i+1<len,eq(msg[i],10)),eq(msg[i+1],46))) then {
        buffer[j] := msg[i];
        j:=j+1;
        i:=i+1;
        buffer[j] := msg[i];
        j:=j+1;
        i:=i+1;
        buffer[j] := 46; -- '.'
        j:=j+1
      } else {
        buffer[j] := msg[i];
        j:=j+1;
        i:=i+1
      }
    }
  }
}
-}