#include "Primitives.imp"

{-- Example from Figure 2 of Gulwani-PLDI'08
-- In our system, the assertion cannot be proven.
void PV2() {
  int x:=0;
  int y:=0;
  while (y>=0) do {
    if (x<=50) then { y:=y+1 }
    else { y:=y-1 };
    x:=x+1
  };
  assert(x=102)
}
-}

-- Variant of the example from Figure 2 of Gulwani-PLDI'08: the loop phases are separated in two recursive functions.
-- In our system, the assertion can be proven for m=3.
void PV2_variant() {
  int x:=0;
  int y:=0;
  if (x<=50) then { f1(x,y) }
  else { f2(x,y) };
  assert(x=102)
}

void f1(ref int x, ref int y) { 
  y:=y+1;
  if (y<0) then { void }
  else {
    x:=x+1;
    if (x<=50) then { f1(x,y) }
    else { f2(x,y) }
  }
}

void f2(ref int x, ref int y) {
  y:=y-1;
  if (y<0) then { void }
  else { 
    x:=x+1;
    f2(x,y)
  }
} 

